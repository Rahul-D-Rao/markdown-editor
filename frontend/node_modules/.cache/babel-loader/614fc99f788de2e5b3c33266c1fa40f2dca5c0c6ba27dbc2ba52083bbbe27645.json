{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahul\\\\Downloads\\\\markdown-editor\\\\frontend\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./styles.css\";\nimport { marked } from \"marked\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [markdownText, setMarkdownText] = useState(\"\");\n  const [htmlText, setHtmlText] = useState(\"\");\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const handleMarkdownChange = event => {\n    const markdownValue = event.target.value;\n    setMarkdownText(markdownValue);\n    setHtmlText(marked(markdownValue));\n  };\n  const handlePreviewClick = () => {\n    alert(\"This is a preview-only area!\");\n  };\n  const toggleMode = () => {\n    setIsDarkMode(!isDarkMode);\n\n    // Add or remove dark mode class to the body for full-page effect\n    if (!isDarkMode) {\n      document.body.classList.add(\"dark-mode\");\n    } else {\n      document.body.classList.remove(\"dark-mode\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${isDarkMode ? \"dark-mode\" : \"light-mode\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mode-toggle\",\n      onClick: toggleMode,\n      children: isDarkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Live Markdown & HTML Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-section markdown-section\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"editor\",\n          value: markdownText,\n          onChange: handleMarkdownChange,\n          placeholder: \"Start typing markdown here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-section\",\n        onClick: handlePreviewClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output\",\n          dangerouslySetInnerHTML: {\n            __html: htmlText\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4F+Gq5ch9AmC4ZZ3Mm04f2MOSnk=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 61,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","marked","jsxDEV","_jsxDEV","App","_s","markdownText","setMarkdownText","htmlText","setHtmlText","isDarkMode","setIsDarkMode","handleMarkdownChange","event","markdownValue","target","value","handlePreviewClick","alert","toggleMode","document","body","classList","add","remove","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","dangerouslySetInnerHTML","__html","_c","root","createRoot","getElementById","render","$RefreshReg$"],"sources":["C:/Users/rahul/Downloads/markdown-editor/frontend/src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./styles.css\";\r\nimport { marked } from \"marked\";\r\n\r\nconst App = () => {\r\n  const [markdownText, setMarkdownText] = useState(\"\");\r\n  const [htmlText, setHtmlText] = useState(\"\");\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  const handleMarkdownChange = (event) => {\r\n    const markdownValue = event.target.value;\r\n    setMarkdownText(markdownValue);\r\n    setHtmlText(marked(markdownValue));\r\n  };\r\n\r\n  const handlePreviewClick = () => {\r\n    alert(\"This is a preview-only area!\");\r\n  };\r\n\r\n  const toggleMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n\r\n    // Add or remove dark mode class to the body for full-page effect\r\n    if (!isDarkMode) {\r\n      document.body.classList.add(\"dark-mode\");\r\n    } else {\r\n      document.body.classList.remove(\"dark-mode\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`app ${isDarkMode ? \"dark-mode\" : \"light-mode\"}`}>\r\n      <button className=\"mode-toggle\" onClick={toggleMode}>\r\n        {isDarkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\r\n      </button>\r\n      <h1>Live Markdown & HTML Editor</h1>\r\n      <div className=\"editor-container\">\r\n        {/* Markdown Editor */}\r\n        <div className=\"editor-section markdown-section\">\r\n          <textarea\r\n            className=\"editor\"\r\n            value={markdownText}\r\n            onChange={handleMarkdownChange}\r\n            placeholder=\"Start typing markdown here\"\r\n          />\r\n        </div>\r\n        {/* Preview Section */}\r\n        <div className=\"preview-section\" onClick={handlePreviewClick}>\r\n          <div\r\n            className=\"output\"\r\n            dangerouslySetInnerHTML={{ __html: htmlText }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}