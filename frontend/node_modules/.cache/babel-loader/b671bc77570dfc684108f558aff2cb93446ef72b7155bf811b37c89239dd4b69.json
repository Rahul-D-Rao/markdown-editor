{"ast":null,"code":"import React,{useState}from\"react\";import ReactDOM from\"react-dom/client\";// Correct import for React 18\nimport\"./styles.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[markdown,setMarkdown]=useState(\"\");const[html,setHtml]=useState(\"\");const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const handleChange=event=>{setMarkdown(event.target.value);};const handleConvert=async()=>{setLoading(true);setError(null);// Reset error on new request\ntry{const response=await fetch(\"http://localhost:5000/convert\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({content:markdown})});if(!response.ok){throw new Error(\"Failed to convert Markdown\");}const result=await response.json();setHtml(result.html);// Set the converted HTML\n}catch(error){console.error(\"Error:\",error);setError(\"There was an error with the request. Please try again.\");// Display the error\n}finally{setLoading(false);// Reset loading state\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"textarea\",{value:markdown,onChange:handleChange,placeholder:\"Type your markdown here\",className:\"editor\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleConvert,className:\"convert-button\",disabled:loading,children:loading?\"Converting...\":\"Convert to HTML\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"output\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Converted HTML\"}),/*#__PURE__*/_jsx(\"div\",{dangerouslySetInnerHTML:{__html:html}})]})]});};// React 18: Use `ReactDOM.createRoot().render()` instead of `ReactDOM.render()`\nconst root=ReactDOM.createRoot(document.getElementById(\"root\"));root.render(/*#__PURE__*/_jsx(App,{}));","map":{"version":3,"names":["React","useState","ReactDOM","jsx","_jsx","jsxs","_jsxs","App","markdown","setMarkdown","html","setHtml","loading","setLoading","error","setError","handleChange","event","target","value","handleConvert","response","fetch","method","headers","body","JSON","stringify","content","ok","Error","result","json","console","className","children","onChange","placeholder","onClick","disabled","dangerouslySetInnerHTML","__html","root","createRoot","document","getElementById","render"],"sources":["C:/Users/rahul/Downloads/markdown-editor/frontend/src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom/client\"; // Correct import for React 18\r\nimport \"./styles.css\";\r\n\r\nconst App = () => {\r\n  const [markdown, setMarkdown] = useState(\"\");\r\n  const [html, setHtml] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleChange = (event) => {\r\n    setMarkdown(event.target.value);\r\n  };\r\n\r\n  const handleConvert = async () => {\r\n    setLoading(true);\r\n    setError(null); // Reset error on new request\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/convert\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ content: markdown }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to convert Markdown\");\r\n      }\r\n\r\n      const result = await response.json();\r\n      setHtml(result.html); // Set the converted HTML\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setError(\"There was an error with the request. Please try again.\"); // Display the error\r\n    } finally {\r\n      setLoading(false); // Reset loading state\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <textarea\r\n        value={markdown}\r\n        onChange={handleChange}\r\n        placeholder=\"Type your markdown here\"\r\n        className=\"editor\"\r\n      />\r\n      <button\r\n        onClick={handleConvert}\r\n        className=\"convert-button\"\r\n        disabled={loading}\r\n      >\r\n        {loading ? \"Converting...\" : \"Convert to HTML\"}\r\n      </button>\r\n      {error && <p className=\"error\">{error}</p>}{\" \"}\r\n      {/* Display error if present */}\r\n      <div className=\"output\">\r\n        <h2>Converted HTML</h2>\r\n        <div dangerouslySetInnerHTML={{ __html: html }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// React 18: Use `ReactDOM.createRoot().render()` instead of `ReactDOM.render()`\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CAAE;AACzC,MAAO,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtB,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACS,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAe,YAAY,CAAIC,KAAK,EAAK,CAC9BR,WAAW,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACjC,CAAC,CAED,KAAM,CAAAC,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChCP,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAAE;AAEhB,GAAI,CACF,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,+BAA+B,CAAE,CAC5DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,OAAO,CAAEpB,QAAS,CAAC,CAC5C,CAAC,CAAC,CAEF,GAAI,CAACa,QAAQ,CAACQ,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,4BAA4B,CAAC,CAC/C,CAEA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CACpCrB,OAAO,CAACoB,MAAM,CAACrB,IAAI,CAAC,CAAE;AACxB,CAAE,MAAOI,KAAK,CAAE,CACdmB,OAAO,CAACnB,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAC9BC,QAAQ,CAAC,wDAAwD,CAAC,CAAE;AACtE,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CAAE;AACrB,CACF,CAAC,CAED,mBACEP,KAAA,QAAK4B,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB/B,IAAA,aACEe,KAAK,CAAEX,QAAS,CAChB4B,QAAQ,CAAEpB,YAAa,CACvBqB,WAAW,CAAC,yBAAyB,CACrCH,SAAS,CAAC,QAAQ,CACnB,CAAC,cACF9B,IAAA,WACEkC,OAAO,CAAElB,aAAc,CACvBc,SAAS,CAAC,gBAAgB,CAC1BK,QAAQ,CAAE3B,OAAQ,CAAAuB,QAAA,CAEjBvB,OAAO,CAAG,eAAe,CAAG,iBAAiB,CACxC,CAAC,CACRE,KAAK,eAAIV,IAAA,MAAG8B,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAErB,KAAK,CAAI,CAAC,CAAE,GAAG,cAE/CR,KAAA,QAAK4B,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACrB/B,IAAA,OAAA+B,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvB/B,IAAA,QAAKoC,uBAAuB,CAAE,CAAEC,MAAM,CAAE/B,IAAK,CAAE,CAAE,CAAC,EAC/C,CAAC,EACH,CAAC,CAEV,CAAC,CAED;AACA,KAAM,CAAAgC,IAAI,CAAGxC,QAAQ,CAACyC,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CACjEH,IAAI,CAACI,MAAM,cAAC1C,IAAA,CAACG,GAAG,GAAE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}