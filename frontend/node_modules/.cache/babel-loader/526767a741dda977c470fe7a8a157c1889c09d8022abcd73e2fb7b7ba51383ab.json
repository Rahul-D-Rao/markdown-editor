{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahul\\\\Downloads\\\\markdown-editor\\\\frontend\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom/client\"; // Correct import for React 18\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [markdown, setMarkdown] = useState(\"\");\n  const [html, setHtml] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleChange = event => {\n    setMarkdown(event.target.value);\n  };\n  const handleConvert = async () => {\n    setLoading(true);\n    setError(null); // Reset error on new request\n\n    try {\n      const response = await fetch(\"http://localhost:5000/convert\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          content: markdown\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to convert Markdown\");\n      }\n      const result = await response.json();\n      setHtml(result.html); // Set the converted HTML\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setError(\"There was an error with the request. Please try again.\"); // Display the error\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Markdown Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: markdown,\n      onChange: handleChange,\n      placeholder: \"Type your markdown here\",\n      className: \"editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConvert,\n      className: \"convert-button\",\n      disabled: loading,\n      children: loading ? \"Converting...\" : \"Convert to HTML\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Converted HTML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: html\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n// React 18: Use `ReactDOM.createRoot().render()` instead of `ReactDOM.render()`\n_s(App, \"Ay/FMbJSnTK4iAX/RA56LWcoWKo=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 68,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","jsxDEV","_jsxDEV","App","_s","markdown","setMarkdown","html","setHtml","loading","setLoading","error","setError","handleChange","event","target","value","handleConvert","response","fetch","method","headers","body","JSON","stringify","content","ok","Error","result","json","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","onClick","disabled","dangerouslySetInnerHTML","__html","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["C:/Users/rahul/Downloads/markdown-editor/frontend/src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom/client\"; // Correct import for React 18\r\nimport \"./styles.css\";\r\n\r\nconst App = () => {\r\n  const [markdown, setMarkdown] = useState(\"\");\r\n  const [html, setHtml] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleChange = (event) => {\r\n    setMarkdown(event.target.value);\r\n  };\r\n\r\n  const handleConvert = async () => {\r\n    setLoading(true);\r\n    setError(null); // Reset error on new request\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/convert\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ content: markdown }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to convert Markdown\");\r\n      }\r\n\r\n      const result = await response.json();\r\n      setHtml(result.html); // Set the converted HTML\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setError(\"There was an error with the request. Please try again.\"); // Display the error\r\n    } finally {\r\n      setLoading(false); // Reset loading state\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Markdown Editor</h1>\r\n      <textarea\r\n        value={markdown}\r\n        onChange={handleChange}\r\n        placeholder=\"Type your markdown here\"\r\n        className=\"editor\"\r\n      />\r\n      <button\r\n        onClick={handleConvert}\r\n        className=\"convert-button\"\r\n        disabled={loading}\r\n      >\r\n        {loading ? \"Converting...\" : \"Convert to HTML\"}\r\n      </button>\r\n      {error && <p className=\"error\">{error}</p>}{\" \"}\r\n      {/* Display error if present */}\r\n      <div className=\"output\">\r\n        <h2>Converted HTML</h2>\r\n        <div dangerouslySetInnerHTML={{ __html: html }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// React 18: Use `ReactDOM.createRoot().render()` instead of `ReactDOM.render()`\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB,CAAC,CAAC;AACzC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,YAAY,GAAIC,KAAK,IAAK;IAC9BR,WAAW,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCP,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEhB,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAEpB;QAAS,CAAC;MAC5C,CAAC,CAAC;MAEF,IAAI,CAACa,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEA,MAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MACpCrB,OAAO,CAACoB,MAAM,CAACrB,IAAI,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BC,QAAQ,CAAC,wDAAwD,CAAC,CAAC,CAAC;IACtE,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;EAED,oBACER,OAAA;IAAK6B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB9B,OAAA;MAAA8B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBlC,OAAA;MACEc,KAAK,EAAEX,QAAS;MAChBgC,QAAQ,EAAExB,YAAa;MACvByB,WAAW,EAAC,yBAAyB;MACrCP,SAAS,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACFlC,OAAA;MACEqC,OAAO,EAAEtB,aAAc;MACvBc,SAAS,EAAC,gBAAgB;MAC1BS,QAAQ,EAAE/B,OAAQ;MAAAuB,QAAA,EAEjBvB,OAAO,GAAG,eAAe,GAAG;IAAiB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EACRzB,KAAK,iBAAIT,OAAA;MAAG6B,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAErB;IAAK;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAE,GAAG,eAE/ClC,OAAA;MAAK6B,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrB9B,OAAA;QAAA8B,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBlC,OAAA;QAAKuC,uBAAuB,EAAE;UAAEC,MAAM,EAAEnC;QAAK;MAAE;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAAhC,EAAA,CA7DMD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AA8DT,MAAMyC,IAAI,GAAG5C,QAAQ,CAAC6C,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cAAC9C,OAAA,CAACC,GAAG;EAAA8B,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAO,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}