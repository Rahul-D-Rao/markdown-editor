{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahul\\\\Downloads\\\\markdown-editor\\\\frontend\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom/client\"; // Correct import\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [markdown, setMarkdown] = useState(\"\");\n  const [html, setHtml] = useState(\"\");\n  const handleChange = event => {\n    setMarkdown(event.target.value);\n  };\n  const handleConvert = async () => {\n    const response = await fetch(\"http://localhost:5000/convert\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        content: markdown\n      })\n    });\n    if (response.ok) {\n      const result = await response.json();\n      setHtml(result.html);\n    } else {\n      alert(\"Error converting markdown\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: markdown,\n      onChange: handleChange,\n      placeholder: \"Type your markdown here\",\n      className: \"editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConvert,\n      className: \"convert-button\",\n      children: \"Convert to HTML\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Converted HTML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: html\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n// React 18: Use `ReactDOM.createRoot().render()` instead of `ReactDOM.render()`\n_s(App, \"DrUnavNnjuxp5jJIrk/ALGGEo9g=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","jsxDEV","_jsxDEV","App","_s","markdown","setMarkdown","html","setHtml","handleChange","event","target","value","handleConvert","response","fetch","method","headers","body","JSON","stringify","content","ok","result","json","alert","className","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","dangerouslySetInnerHTML","__html","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["C:/Users/rahul/Downloads/markdown-editor/frontend/src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom/client\"; // Correct import\r\nimport \"./styles.css\";\r\n\r\nconst App = () => {\r\n  const [markdown, setMarkdown] = useState(\"\");\r\n  const [html, setHtml] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setMarkdown(event.target.value);\r\n  };\r\n\r\n  const handleConvert = async () => {\r\n    const response = await fetch(\"http://localhost:5000/convert\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ content: markdown }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const result = await response.json();\r\n      setHtml(result.html);\r\n    } else {\r\n      alert(\"Error converting markdown\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <textarea\r\n        value={markdown}\r\n        onChange={handleChange}\r\n        placeholder=\"Type your markdown here\"\r\n        className=\"editor\"\r\n      />\r\n      <button onClick={handleConvert} className=\"convert-button\">\r\n        Convert to HTML\r\n      </button>\r\n      <div className=\"output\">\r\n        <h2>Converted HTML</h2>\r\n        <div dangerouslySetInnerHTML={{ __html: html }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// React 18: Use `ReactDOM.createRoot().render()` instead of `ReactDOM.render()`\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB,CAAC,CAAC;AACzC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,YAAY,GAAIC,KAAK,IAAK;IAC9BJ,WAAW,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAEhB;MAAS,CAAC;IAC5C,CAAC,CAAC;IAEF,IAAIS,QAAQ,CAACQ,EAAE,EAAE;MACf,MAAMC,MAAM,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MACpChB,OAAO,CAACe,MAAM,CAAChB,IAAI,CAAC;IACtB,CAAC,MAAM;MACLkB,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzB,OAAA;MACEU,KAAK,EAAEP,QAAS;MAChBuB,QAAQ,EAAEnB,YAAa;MACvBoB,WAAW,EAAC,yBAAyB;MACrCH,SAAS,EAAC;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACF/B,OAAA;MAAQgC,OAAO,EAAErB,aAAc;MAACa,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAE3D;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT/B,OAAA;MAAKwB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBzB,OAAA;QAAAyB,QAAA,EAAI;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB/B,OAAA;QAAKiC,uBAAuB,EAAE;UAAEC,MAAM,EAAE7B;QAAK;MAAE;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAA7B,EAAA,CA1CMD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AA2CT,MAAMmC,IAAI,GAAGtC,QAAQ,CAACuC,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cAACxC,OAAA,CAACC,GAAG;EAAA2B,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAI,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}